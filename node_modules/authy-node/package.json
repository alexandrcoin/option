{
  "author": {
    "name": "Franklin van de Meent",
    "email": "fr@nkl.in",
    "url": "http://frankl.in"
  },
  "name": "authy-node",
  "description": "Authy API wrapper",
  "version": "1.0.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/fvdm/nodejs-authy.git"
  },
  "bugs": {
    "url": "https://github.com/fvdm/nodejs-authy/issues"
  },
  "main": "authy.js",
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": ">=0.10.0"
  },
  "keywords": [
    "authy",
    "authentication",
    "security",
    "api"
  ],
  "license": {
    "type": "Public Domain",
    "url": "https://github.com/fvdm/nodejs-authy/raw/master/UNLICENSE"
  },
  "readme": "nodejs-authy\n============\n\nAuthy.com API wrapper for Node.js\n\n\nInstallation\n------------\n\nYou can install this module from Github, but can be unstable:\n\n\tgit clone https://github.com/fvdm/nodejs-authy\n\tnpm install ./nodejs-authy\n\nOr from the NPM registry, which is always the latest stable release:\n\n\tnpm install authy-node\n\n\nSetup\n-----\n\nYou need to signup at [Authy](http://authy.com/) and create an app in your [Dashboard](https://dashboard.authy.com/).\nOnce done take note of the two *different* app tokens. The one on the left is for real production use, the other on the right is only for safe testing.\n\n```js\nvar authy = require('authy-node')\n\nauthy.api.mode = 'sandbox'\nauthy.api.token = 'abc123def456'\n```\n\nWhen you switch to *production* make sure to set `api.mode` to `production` and `api.token` to your **production** token!\n\n\nCallback & errors\n-----------------\n\nEach method requires a callback function, like this:\n\n```js\nfunction myCallback( err, res ) {\n\tif( err ) {\n\t\tconsole.log( err )\n\t\tconsole.log( err.stack )\n\t} else {\n\t\tconsole.log( res )\n\t}\n}\n```\n\nIn case of an *error*: `err` is an instance of `Error`, sometimes with additional properties to help with tracing the problem. `res` is `null`.\n\nWhen everything is *good*: `err` is null and `res` is an `object` with the API's response.\n\n\nMethods\n-------\n\n### .register ( email, phone, country, callback )\n\t\nRegister a new user to your app.\n\n\temail      user's email address\n\tphone      user's cellphone number\n\tcountry    user's country code for cell\n\n```js\nauthy.register( 'user@example.net', '0612345789', 31, myCallback )\n```\n\n\n### .delete ( userId, callback )\n\nDelete a user from your app.\n\n\tuserId     user's Authy ID, from .register()\n\n```js\nauthy.delete( 123, myCallback )\n```\n\n\n### .verify ( userId, token, [force], callback )\n\nVerify an authentication token your app received from the user.\n\n\tuserId     user's Authy ID, from .register()\n\ttoken      user's token, from Authy or SMS\n\tforce      force verification\n\n**Normal:**\n\n```js\nauthy.verify( 123, '01234567', myCallback )\n```\n\n**With force:**\n\n```js\nauthy.verify( 123, '01234567', true, myCallback )\n```\n\n\n### .sms ( userId, [force], callback )\n\nSend authentication token by SMS.\n\n\tuserId     user's Authy ID, from .register()\n\tforce      send SMS even when user has smartphone.\n\n**Normal:**\n\n```js\nauthy.sms( 123, myCallback )\n```\n\n**With force:**\n\n```ja\nauthy.sms( 123, true, myCallback )\n```\n\n\n### .app.details ( callback )\n\nGet basic information about your API token.\n\n```js\nauthy.app.details( myCallback )\n```\n\n\n### .app.stats ( callback )\n\nGet monthly statistics about your API token.\n\n```js\nauthy.app.stats( myCallback )\n```\n\n\nUnlicense\n---------\n\nThis is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to <http://unlicense.org>\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/fvdm/nodejs-authy",
  "_id": "authy-node@1.0.0",
  "dist": {
    "shasum": "70fb7e1917556492aac89defb92eeec2c7acf312"
  },
  "_from": "authy-node@",
  "_resolved": "http://registry.npmjs.org/authy-node/-/authy-node-1.0.0.tgz"
}
